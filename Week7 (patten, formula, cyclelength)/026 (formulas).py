# 26.

# 已知有一公式
# S(K) = 11 + 22 + 33 + 44 + 55 + … + KK

# 將 K 代入公式中，可以求出一個數字
# 將該數字由右往左看，可以產生一個有序數列

# 假設 K = 2，則S(2) = 1 + 4 = 5，數列為5
# 假設 K = 3，則S(3) = 1 + 4 + 27 = 32，數列為2,3
# 假設 K = 5，則S(5) = 1 + 4 + 27 + 256 + 3125 = 3143，數列為3,4,1,3

# 給定一正整數 N ( 1 <= N <= 10)，代表接下來會輸入 N 行測資
# 每一行輸入的正整數為 K ( 1 <= K <= 15)，K 代表要被計算的數字

# 輸入每一個 K 時，會輸出兩行結果：
# 1. S(K) 的值
# 2. S(K) 的數列

# 請注意：
# 1. 當 K 超出範圍時，需輸出 "ERROR" 字串並繼續執行程式，直到測資輸入完畢
# 2. 若數列的長度 > 1，數列中的每一個數之間需用逗號進行分隔

# 輸入說明：
# 第一行輸入正整數 N，N 代表測資個數 (1 <= N <= 10)
# 接下來 N 行，每行輸入正整數 K，K 代表要被計算的數字 (1 <= K <= 15)

# 輸出說明：
# 針對 N 個 K ，印出每一個S(K)的值以及其數列，並且分成兩行輸出。
# 若 K 超出範圍請輸出 "ERROR" 字串，並繼續執行程式直到測資輸入完畢。
# -------------------------------------------------------------------


# 輸入範例1：
# 1
# 3

# 輸出範例1：
# 32
# 2,3

# -------------------------------------------------------------------

# 輸入範例2：
# 3
# 10
# 7
# 2

# 輸出範例2：
# 10405071317
# 7,1,3,1,7,0,5,0,4,0,1
# 873612
# 2,1,6,3,7,8
# 5
# 5
# -------------------------------------------------------------------

# 輸入範例3：
# 4
# 15
# 16
# 6
# 4

# 輸出範例3：
# 449317984130199828
# 8,2,8,9,9,1,0,3,1,4,8,9,7,1,3,9,4,4
# ERROR
# 50069
# 9,6,0,0,5
# 288
# 8,8,2

# -------------------------------------------------------------------

# 輸入範例4：
# 3
# 11
# 0
# 7

# 輸出範例4：
# 295716741928
# 8,2,9,1,4,7,6,1,7,5,9,2
# ERROR
# 873612
# 2,1,6,3,7,8

ERROR = "ERROR"

def sum(input):
    if (input == 1):
        return 1
        
    return ((input**input) + sum(input-1))

def Seq(result):
    ukuran = str(result)
    returnStr = ""
    for i in range(len(ukuran)-1, -1, -1):
        returnStr += ukuran[i]
        
        if (i != 0):
            returnStr += ","

    return returnStr

def logika(input):
    result = sum(input)
    ukuran = Seq(result)
    print(result)
    print(ukuran)

def utama():
    try:
        n = int(input())
        
        if (n < 0 or n > 10):
            print(ERROR)
            return
        
        for i in range(0, n, 1):
            k = int(input())

            if (k < 1 or k > 15):
                print(ERROR)
                continue

            logika(k)
    
    except:
        print("Inputus are not ints")

if __name__ == '__main__':
    utama()