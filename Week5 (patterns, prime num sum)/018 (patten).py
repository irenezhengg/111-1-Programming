# 18 -
# 繪製三種不同的圖形，每個圖形都有大小 N (3 <= N <= 50)，代表這個圖有N行

# 第一種圖形為朝右邊斜的平行四邊形
# 例如:
# N = 5
# 輸出圖形為:
# ____12345
# ___54321_
# __12345__
# _54321___
# 12345____


# 第二種圖形為朝左邊斜的平行四邊形
# 例如:
# N = 5
# 輸出圖形為:
# 54321____
# _12345___
# __54321__
# ___12345_
# ____54321


# 第三種圖形為沙漏型
# 共有N行，且N不為偶數；若N為偶數，則改為輸出ERROR，且不必輸出圖形
# 例如:
# N = 7
# 輸出圖形為:
# 4321234
# _32123_
# __212__
# ___1___
# __212__
# _32123_
# 4321234

# N = 6
# 輸出:
# ERROR

# ---------------------------------------------------

# 輸入說明 :
# 第一行，輸入整數 1 or 2 or 3，代表接下來要畫的圖形種類
# 若第一行輸入的整數為1, 2, 3 以外的數字，則直接結束程式，不必輸出任何字串與圖形

# 第一種圖形為 朝右邊斜的平行四邊形 (參考 範例輸出1、範例輸出2)
# 第二種圖形為 朝左邊斜的平行四邊形 (參考 範例輸出3、範例輸出4)
# 第三種圖形為 沙漏型 (參考 範例輸出5)

# 第二行，輸入整數 N，3 <= N <= 50，代表這個圖形有N行
# 若第一行的整數為3，且第二行的N為偶數，則輸出ERROR，並結束程式 (不必輸出圖形)

# 輸出說明 :
# 根據輸入，畫出對應的圖形
# 輸出圖形為數字+底線

# ---------------------------------------------------

# 範例輸入 1: (https://ppt.cc/fJqy9x)
# 1
# 5

# 範例輸出 1:
# ____12345
# ___54321_
# __12345__
# _54321___
# 12345____

# ---------------------------------------------------

# 範例輸入 2: (https://ppt.cc/f6ypux)
# 1
# 8

# 範例輸出 2:
# _______12345678
# ______87654321_
# _____12345678__
# ____87654321___
# ___12345678____
# __87654321_____
# _12345678______
# 87654321_______

# ---------------------------------------------------

# 範例輸入 3: (https://ppt.cc/fqPeUx)
# 2
# 5

# 範例輸出 3:
# 54321____
# _12345___
# __54321__
# ___12345_
# ____54321

# ---------------------------------------------------

# 範例輸入 4: (https://ppt.cc/fCIDHx)
# 2
# 8

# 範例輸出 4:
# 87654321_______
# _12345678______
# __87654321_____
# ___12345678____
# ____87654321___
# _____12345678__
# ______87654321_
# _______12345678

# ---------------------------------------------------

# 範例輸入 5: (https://ppt.cc/fXqXfx)
# 3
# 7

# 範例輸出 5:
# 4321234
# _32123_
# __212__
# ___1___
# __212__
# _32123_
# 4321234

# ---------------------------------------------------

# 範例輸入 6:
# 3
# 4

# 範例輸出 6:
# ERROR

def entahApa(baris, ukuran):
    marginSize = ukuran - 1 - (2 * baris)
    print(marginSize * " ", end = '')
    print(2 * baris * "*", end = '')
    print("*", end='')
    print(2 * baris * "*", end = '')
    print(2 * marginSize * " ", end = '')
    print(2 * (baris-1) * "+", end='')
    if (baris > 0):
        print("+", end="")

def logika(ukuran):
    for i in range(0, ukuran//2, 1):
        entahApa(i, ukuran)
        print()
    for j in range(ukuran//2, -1, -1):
        entahApa(j, ukuran)
        print()


def main():
    ukuran = input()

    try:
        ukuran = int(ukuran)
    except:
        print("Inputs are not ints!")

    if (ukuran%2 == 0):
        print("ERROR")
        return

    logika(ukuran)

if __name__ == '__main__':
    main()