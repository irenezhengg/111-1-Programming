# 011.
# 檢查三門課程是否衝堂，
# 依序輸入課程編號(數字)、
# 上課小時數(1-3小時)、
# 上課時間(星期1-5, 第1-9節)

# -------------------------------------------------------------------

# 輸入說明:
# 輸入三門課程的資訊
# 每一門課程的資訊
# 第一行為課程編號
# 第二行為上課小時數 H
# 接下來有H行，
# 每一行為一個兩位數數字，十位數表示星期幾，個位數表示第幾節

# 輸出說明:
# 輸出兩個衝突的課程編號，以及在哪一天的哪一節衝突，參考下列格式
# {課程1編號} and {課程2編號} conflict on {衝堂在哪天哪節}
# 先輸入的課程為課程1，後輸入的課程為課程2
# -------------------------------------------------------------------

# 範例輸入 1說明
# 1001 (第一門課課程編號)
# 3 (3小時，每節課1小時)
# 11 (星期1 第1節課)
# 12 (星期1 第2節課)
# 13 (星期1 第3節課)
# 1002 (第二門課課程編號)
# 3 (3小時，每節課1小時)
# 21 (星期2 第1節課)
# 22 (星期2 第2節課)
# 23 (星期2 第3節課)
# 1003 (第三門課課程編號)
# 3 (3小時，每節課1小時)
# 31 (星期3 第1節課)
# 32 (星期3 第2節課)
# 13 (星期1 第3節課)

# 範例輸出 1說明 (兩課程編號衝突在哪幾節)
# 1001 and 1003 conflict on 13 (課程1001跟課程1003，在星期1第3節衝堂，因課程1001先輸入，所以課程1001放前面)

# -------------------------------------------------------------------

# Example Input 1：
# 1001
# 3
# 11
# 12
# 13
# 1002
# 3
# 21
# 22
# 23
# 1003
# 3
# 31
# 32
# 13

# Example Output 1：
# 1001 and 1003 conflict on 13

# -------------------------------------------------------------------

# Example Input 2：
# 1001
# 1
# 11
# 1002
# 3
# 21
# 22
# 11
# 1003
# 3
# 31
# 32
# 33

# Example Output 2：
# 1001 and 1002 conflict on 11

# -------------------------------------------------------------------

# Example Input 3：
# 1001
# 2
# 11
# 12
# 1002
# 3
# 21
# 22
# 41
# 1003
# 3
# 22
# 32
# 33

# Example Output 3：
# 1002 and 1003 conflict on 22

def data_input():
    lessonNo = input()
    lesson = [lessonNo]
    lessonHr = int(input())
    for i in range(lessonHr):
        lessonTime = input()
        lesson.append(lessonTime)
    return lesson

def check(lesson1, lesson2):
    set1 = set(lesson1)
    set2 = set(lesson2)
    checked = list(set1.intersection(set2))
    for i in range(len(checked)):
        print(lesson1[0],"and",lesson2[0],"conflict on",checked[i])

L1 = data_input()
L2 = data_input()
L3 = data_input()

checked_lessons = check(L1,L2)
checked_lessons = check(L1,L3)
checked_lessons = check(L2,L3)