# A21.
# 繪製星星與數字的複合圖形，輸入一整數(1 <= N <= 9) 代表此圖形有N*2行。
# 如果N超出範圍(N < 1或N > 10)，請輸出ERROR並結束程式(不需輸出圖形)。

# 每行輸出多一個星號，且每行多一個數字，到第N行時則開始遞減。
# 例如:
# N = 9

# ########* 1
# #######** 12
# ######*** 123
# #####**** 1234
# ####***** 12345
# ###****** 123456
# ##******* 1234567
# #******** 12345678
# ********* 123456789
# 987654321 *********
# #98765432 ********
# ##9876543 *******
# ###987654 ******
# ####98765 *****
# #####9876 ****
# ######987 ***
# #######98 **
# ########9 *
# -------------------------------------------------------------------------------------------------
# 輸入說明:
# 第一行輸入整數N (1 <= N <= 9)

# 輸出說明:
# 根據輸入，畫出對應的圖形。
# 輸出的圖形包含井字號、星號以及數字。
# 如果N < 1或N > 10，請輸出ERROR。
# -------------------------------------------------------------------------------------------------
# 範例輸入 1:
# 2

# 範例輸出 1:
# #* 1
# ** 12
# 21 **
# #2 *

# -------------------------------------------------------------------------------------------------

# 範例輸入 2:
# 5

# 範例輸出 2:
# ####* 1
# ###** 12
# ##*** 123
# #**** 1234
# ***** 12345
# 54321 *****
# #5432 ****
# ##543 ***
# ###54 **
# ####5 *

# -------------------------------------------------------------------------------------------------

# 範例輸入 3:
# 9

# 範例輸出 3:
# ########* 1
# #######** 12
# ######*** 123
# #####**** 1234
# ####***** 12345
# ###****** 123456
# ##******* 1234567
# #******** 12345678
# ********* 123456789
# 987654321 *********
# #98765432 ********
# ##9876543 *******
# ###987654 ******
# ####98765 *****
# #####9876 ****
# ######987 ***
# #######98 **
# ########9 *

# -------------------------------------------------------------------------------------------------

# 範例輸出 4:
# 10

# 範例輸出 4:
# ERROR

# -------------------------------------------------------------------------------------------------

# 範例輸入 5:
# 0

# 範例輸出 5:
# ERROR


ukuran = 0

def pound(row):
    global ukuran
    for i in range(0, ukuran-row, 1):
        print("#", end='')

def stars(row):
    for i in range(0, row, 1):
        print("*", end='')

def space():
    print(" ", end='')

def num(row):
    for i in range(1, row+1, 1):
        print(i, end='')

def numInverse(row):
    global ukuran
    for i in range(ukuran, ukuran-row, -1):
        print(i, end='')

def logic():
    global ukuran
    for i in range(1, ukuran+1, 1):
        pound(i)
        stars(i)
        space()
        num(i)
        print()
    
    for j in range(ukuran, 0, -1):
        pound(j)
        numInverse(j)
        space()
        stars(j)
        print()

def main():
    try:
        n = int(input())
    except:
        print("Input is not an int.")

    if (n < 1 or n > 9):
        print("ERROR")
        return
    global ukuran
    ukuran = n

    logic()

if __name__ == '__main__':
    main()